.pu-field {
  @include pu-theme-component() {
    @if pu-get-theme-mode() == light {
      &:after {
        background-color: rgba(#000, .42);
      }

      &:before {
        @include pu-theme-property(background-color, primary);
      }

      .pu-helper-text,
      .pu-count,
      label {
        color: rgba(#000, .54);
      }

      .pu-suffix, .pu-prefix {
        color: rgba(#000, .54);
      }

      .pu-input,
      .pu-textarea {
        &::-webkit-input-placeholder {
          color: rgba(#000, .54);
        }
      }

      &.pu-focused,
      &.pu-has-value {
        .pu-input,
        .pu-textarea {
          -webkit-text-fill-color: rgba(#000, .87);
        }
      }

      &.pu-has-textarea:not(.pu-autogrow) {
        &:after {
          border-color: rgba(#000, .42);
        }

        &:before {
          @include pu-theme-property(border-color, primary);
        }
      }

      &.pu-disabled {
        &:after {
          background-image: linear-gradient(to right, rgba(#000, .38) 0%, rgba(#000, .38) 33%, transparent 0%);
        }

        label,
        .pu-input,
        .pu-textarea {
          color: rgba(#000, .42);
        }
      }
    } @else {
      &:after {
        background-color: rgba(#fff, .7);
      }

      &:before {
        @include pu-theme-property(background-color, primary);
      }

      .pu-helper-text,
      .pu-count,
      label {
        color: rgba(#fff, .7);
      }

      .pu-suffix, .pu-prefix {
        color: rgba(#fff, .7);
      }

      .pu-input,
      .pu-textarea {
        &::-webkit-input-placeholder {
          color: rgba(#fff, .7);
        }
      }

      &.pu-focused,
      &.pu-has-value {
        .pu-input,
        .pu-textarea {
          -webkit-text-fill-color: #fff;
        }
      }

      &.pu-has-textarea:not(.pu-autogrow) {
        &:after {
          border-color: #fff;
        }

        &:before {
          @include pu-theme-property(border-color, primary);
        }
      }

      &.pu-disabled {
        &:after {
          background-image: linear-gradient(to right, rgba(#fff, .7) 0%, rgba(#fff, .7) 33%, transparent 0%);
        }

        label,
        .pu-input,
        .pu-textarea {
          color: rgba(#fff, .5);
        }
      }
    }

    > .pu-icon {
      &:after {
        @include pu-theme-property(background-color, background-variant);
      }
    }

    &.pu-invalid {
      &:after {
        @include pu-theme-property-by-hue(background-color, red, A400, field, error);
      }

      &.pu-has-textarea:not(.pu-autogrow) {
        &:before {
          @include pu-theme-property-by-hue(border-color, red, A400, field, error);
        }
      }

      label {
        @include pu-theme-property-by-hue(color, red, A400, field, error);
      }

      .pu-error {
        @include pu-theme-property-by-hue(color, red, A400, field, error);
      }

      .pu-date-icon,
      .pu-date-icon svg {
        @include pu-theme-property-by-hue(color, red, A400, field, error);
        @include pu-theme-property-by-hue(fill, red, A400, field, error);
      }
    }

    &.pu-focused,
    &.pu-highlight {
      .pu-input,
      .pu-textarea {
        @include pu-theme-property(color, primary, background);
      }

      > .pu-icon {
        @include pu-theme-property(color, primary, background);
        @include pu-theme-property(fill, primary, background);
      }
    }

    &.pu-focused {
      label {
        @include pu-theme-property(color, primary, background);
      }
    }

    &.pu-disabled {
      .pu-icon svg {
        @include pu-theme-property(fill, disabled, background);
      }
    }
  }
}
